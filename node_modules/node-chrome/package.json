{
  "name": "node-chrome",
  "version": "0.0.3-1",
  "description": "use chrome to make desktop apps in node.js",
  "main": "lib/index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": "",
  "author": "",
  "dependencies": {
    "mime": "1.2.9",
    "ws": "0.4.25"
  },
  "license": "MIT",
  "readme": "# NAME\nnode-chrome(3)\n\n# SYNOPSIS\nMake desktop apps with Node.js and Chrome\n\n# DESCRIPTION\nThis module demonstrates how well Node.js and Google Chrome (as two autonomous \nbinaries) can cooperate wihtout much programatic interfacing. Node-chrome is \nthe absolute least amount of glue needed to create a desktop experience with \nNode.js. The module will run on platforms that Chrome and Node.js run on.\n\n# EXAMPLES\nThe `runtime` can point to an existing Chrome binary. You could also bundle a copy \nof it with your project. Bundling it means you can change the icon and other such.\nthings.\n\n```js\n#!/usr/bin/env node\n\nvar nc = require('node-chrome');\n\nvar opts = {\n  runtime: \"/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome\",\n  files: \"./ui\",\n  port: 8080,\n  index: \"/index.html\",\n  width: 1024,\n  height: 760\n};\n\nnc(opts, function(websocket, chrome) {\n\n  // output from the socket.\n  websocket.on('message', function(message) {\n    console.log(message);\n  });\n\n  // output from the chrome runtime.\n  chrome.stdout.on('data', function (data) {\n    console.log(data);\n  });\n\n  // when the user quits the app.\n  chrome.on('exit', function (code) {\n    process.exit(0);\n  });\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "node-chrome@0.0.3-1",
  "_shasum": "8d6894abc83c5d691e70e24ded716cf82a49b0f3",
  "_resolved": "https://github.com/tmpvar/node-chrome/archive/master.tar.gz",
  "_from": "https://github.com/tmpvar/node-chrome/archive/master.tar.gz"
}
